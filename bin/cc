#!/usr/bin/env bash
set -e -u -o pipefail

DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"

if ! ( command -v tacc_credentials >/dev/null && \
       command -v uc_credentials >/dev/null ); then
  echo "Could not find your credentials!"
  echo "Please ensure there is a tacc_credentials() function"
  echo "(with your TACC account credentials) and a uc_credentials()"
  echo "function (with your UChicago account credentials)"
  echo "available from your current shell and sub-shells."
  echo ""
  echo "The functions should print your username and password"
  echo "on separate lines. For example:"
  echo ""
  echo "  tacc_credentials() {"
  echo "    echo \"my_user\""
  echo "    echo \"password\""
  echo "  }"
  echo "  # export for use in sub-shells"
  echo "  export -f tacc_credentials"
  exit 1
fi

read_creds() {
  dest_array="$1"
  set +e
  IFS=$'\n' read -rd '' -a "$dest_array"
  set -e
}

declare -a tacc_creds
declare -a uc_creds
read_creds "tacc_creds" <<<"$(tacc_credentials)"
read_creds "uc_creds" <<<"$(uc_credentials)"

export TACC_USERNAME="${tacc_creds[0]}"
export TACC_PASSWORD="${tacc_creds[1]}"
export UC_USERNAME="${uc_creds[0]}"
export UC_PASSWORD="${uc_creds[1]}"

# Shortcut for subcommands
case "${1:-}" in
  docs)
    shift # past command
    exec docker run --rm -i cc-docs "$@"
    exit $?
    ;;
  ssh|scp)
    exec "$DIR/cc-ssh" "$@"
    exit $?
    ;;
  replacekey)
    shift # past command
    exec "$DIR/cc-replacekey" "$@"
    exit $?
    ;;
  *)
    ;;
esac

cloud="${1:-}"
shift

[[ -n "$cloud" ]] || {
  cat <<USAGE
Usage: $0 <cloud> <command>

Executes <command> within a shell that is pre-configured for
communication with a specific OpenStack cloud named <cloud>.
USAGE
  exit 1
}

env_vars=(
OS_USERNAME="${tacc_creds[0]}"
OS_PASSWORD="${tacc_creds[1]}"
OS_CLOUD="$cloud"
)

exec docker run --rm -i \
  $(for e in "${env_vars[@]}"; do echo "-e $e " | tr -d '\n'; done) \
  cc-openstack \
  "$@"
