#!/usr/bin/env bash
set -e -u -o pipefail

DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"

export ANL_USER="${ANL_USER:-$USER}"
export UC_USER="${UC_USER:-$USER}"
# A Chameleon user account is by default the same as the TACC one.
export TACC_USER="${TACC_USER:-${CHAMELEON_USER:-$USER}}"
export CHAMELEON_USER="${CHAMELEON_USER:-$TACC_USER}"

registry="docker.chameleoncloud.org"

# Shortcut for subcommands
case "${1:-}" in
  docs)
    shift # past command
    exec docker run --rm "$registry/cc-docs" "$@"
    exit $?
    ;;
  rpm)
    shift # past command
    # We mount the current working directory as /work
    exec docker run --rm -v "$PWD:/work" "$registry/cc-rpm" "$@"
    exit $?
    ;;
  ssh|scp)
    exec "$DIR/cc-ssh" "$@"
    exit $?
    ;;
  replacekey)
    shift # past command
    exec "$DIR/cc-replacekey" "$@"
    exit $?
    ;;
  *)
    ;;
esac

cloud="${1:-}"
shift

[[ -n "$cloud" ]] || {
  cat <<USAGE
Usage: $0 <cloud> <command>

Executes <command> within a shell that is pre-configured for
communication with a specific OpenStack cloud named <cloud>.
USAGE
  exit 1
}

password=""
if ! command -v chameleon_password >/dev/null; then
  echo "Could not find your Chameleon password!"
  echo "Please ensure there is a chameleon_password() function"
  echo "(which prints your Chameleon Cloud password) available"
  echo "from your current shell and sub-shells."
  echo ""
  echo "For example:"
  echo ""
  echo "  chameleon_password() {"
  echo "    echo \"password\""
  echo "  }"
  echo "  # export for use in sub-shells"
  echo "  export -f chameleon_password"
  exit 1
else
  password="$(chameleon_password)"
fi

docker_options=(--rm --interactive)
docker_options+=(-e "OS_USERNAME=$CHAMELEON_USER")
docker_options+=(-e "OS_PASSWORD=$password")
docker_options+=(-e "OS_CLOUD=$cloud")
if [[ "${1:-}" == "shell" || -z "${1:-}" ]]; then
  docker_options+=(--tty)
  docker_options+=(-v "$PWD:/mnt/cwd")
  cmd="bash"
  shift
fi

exec docker run "${docker_options[@]}" "$registry/cc-openstack" "${cmd:-$@}"
