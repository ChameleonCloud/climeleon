#!/usr/bin/env bash
set -e -u -o pipefail

DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"

export ANL_USER="${ANL_USER:-$USER}"
export UC_USER="${UC_USER:-$USER}"
export NU_USER="${NU_USER:-$USER}"
# A Chameleon user account is by default the same as the TACC one.
export TACC_USER="${TACC_USER:-${CHAMELEON_USER:-$USER}}"
export CHAMELEON_USER="${CHAMELEON_USER:-$TACC_USER}"

registry="docker.chameleoncloud.org"

# Shortcut for subcommands
case "${1:-}" in
  rpm)
    shift # past command
    # We mount the current working directory as /work
    exec docker run --rm -v "$PWD:/work" "$registry/cc-rpm" "$@"
    exit $?
    ;;
  ssh|scp)
    exec "$DIR/cc-ssh" "$@"
    exit $?
    ;;
  replacekey)
    shift # past command
    exec "$DIR/cc-replacekey" "$@"
    exit $?
    ;;
  update)
    for image in cc-docs cc-openstack cc-rpm; do
      printf "Updating $image command... "
      docker pull "$registry/$image" >/dev/null || break
      printf "($(docker inspect "$registry/$image" -f 'created={{.Created}}'))\n"
    done
    exit $?
    ;;
  vault)
    shift # past command
    exec "$DIR/cc-vault" "$@"
    exit $?
    ;;
  *)
    ;;
esac

cloud="${1:-}"
[[ -n "$cloud" ]] || {
  cat <<USAGE
Usage: $0 <cloud> <command>

Executes <command> within a shell that is pre-configured for
communication with a specific OpenStack cloud named <cloud>.
USAGE
  exit 1
}
shift # Past 'cloud' positional arg

password=""
if ! command -v chameleon_password >/dev/null; then
  cat <<NOPASSWD
Could not find your Chameleon password!"
Please ensure there is a chameleon_password() function
(which prints your Chameleon Cloud password) available
from your current shell and sub-shells.

For example:

  chameleon_password() {
    echo \"password\"
  }
  # export for use in sub-shells
  export -f chameleon_password

NOPASSWD
  exit 1
else
  password="$(chameleon_password)"
fi

docker_options=(--rm --interactive)
docker_options+=(-e "OS_USERNAME=$CHAMELEON_USER")
docker_options+=(-e "OS_PASSWORD=$password")
docker_options+=(-e "OS_CLOUD=$cloud")
docker_options+=(-v "$PWD:/host")
if [[ -z "${1:-}" ]]; then
  docker_options+=(--tty)
  cmd="bash"
fi

exec docker run "${docker_options[@]}" "$registry/cc-openstack" "${cmd:-$@}"
