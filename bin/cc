#!/usr/bin/env bash
set -e -u -o pipefail

DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"

export ANL_USER="${ANL_USER:-$USER}"
export UC_USER="${UC_USER:-$USER}"
# A Chameleon user account is by default the same as the TACC one.
export TACC_USER="${TACC_USER:-${CHAMELEON_USER:-$USER}}"
export CHAMELEON_USER="${CHAMELEON_USER:-$TACC_USER}"

# Shortcut for subcommands
case "${1:-}" in
  docs)
    shift # past command
    exec docker run --rm cc-docs "$@"
    exit $?
    ;;
  ssh|scp)
    exec "$DIR/cc-ssh" "$@"
    exit $?
    ;;
  replacekey)
    shift # past command
    exec "$DIR/cc-replacekey" "$@"
    exit $?
    ;;
  *)
    ;;
esac

cloud="${1:-}"
shift

[[ -n "$cloud" ]] || {
  cat <<USAGE
Usage: $0 <cloud> <command>

Executes <command> within a shell that is pre-configured for
communication with a specific OpenStack cloud named <cloud>.
USAGE
  exit 1
}

password=""
if ! command -v chameleon_password >/dev/null; then
  echo "Could not find your Chameleon password!"
  echo "Please ensure there is a chameleon_password() function"
  echo "(which prints your Chameleon Cloud password) available"
  echo "from your current shell and sub-shells."
  echo ""
  echo "For example:"
  echo ""
  echo "  chameleon_password() {"
  echo "    echo \"password\""
  echo "  }"
  echo "  # export for use in sub-shells"
  echo "  export -f chameleon_password"
  exit 1
else
  password="$(chameleon_password)"
fi

env_vars=(
OS_USERNAME="$CHAMELEON_USER"
OS_PASSWORD="$password"
OS_CLOUD="$cloud"
)

exec docker run --rm -i \
  $(for e in "${env_vars[@]}"; do echo "-e $e " | tr -d '\n'; done) \
  cc-openstack \
  "$@"
