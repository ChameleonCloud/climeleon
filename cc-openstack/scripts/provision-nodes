#!/usr/bin/env bash
set -e -u -o pipefail

IMAGE="CC-CentOS7"
LEASE=""
KEY_PAIR=""
FORCE_ACTIVE=0

for i in "$@"; do
case $i in
    --lease=*)
    LEASE="${i#*=}"
    shift
    ;;
    --key-pair=*)
    KEY_PAIR="${i#*=}"
    shift
    ;;
    --force-active)
    FORCE_ACTIVE=1
    shift
    ;;
    *)
      # unknown option
    ;;
esac
done

INFILE="${1:-/dev/stdin}"

[[ -n "$LEASE" && -n "$KEY_PAIR" ]] || {
  cat <<USAGE
Provisions nodes for a given lease. Defaults to $IMAGE image.

Usage: $(basename $0) (--lease=<name>) (--key-pair=<name>) [--force-active] [<file>]

The input file can either be a list of server names, or a list of tab-separated server names
and hypervisor UUIDs, with the first column being the server name. In the latter case, each
server will be targeted towards a specific hypervisor.

If no file is specified, input is read from STDIN.

Options:
  --lease=<name>    Name of lease.
  --key-pair=<name> Name of key pair.
  --force-active    Forces target node(s) out of maintenance mode before provisioning.
USAGE
  exit 1
}

nicesleep() {
  for i in $(seq 1 $1); do printf ". "; sleep 1; done
  echo
}

echo "Gathering network and reservation information"
sharednet_id="$(openstack network list | grep sharednet1 | awk '{ print $2 }')"
reservation_id="$(blazar lease-show "$LEASE" -f json | jq -r '.reservations | fromjson | .id')"

while IFS= read -r line || [[ -n "$line" ]]; do
  server_name="$(awk '{print $1}' <<<"$line")"
  uuid="$(awk '{print $2}' <<<"$line")"

  if openstack server show "$server_name" >/dev/null; then
    echo "Skipping $server_name as an instance already exists"
    continue
  fi

  declare -a hints=()
  hints+=("reservation=$reservation_id")
  if [[ -n "$uuid" ]]; then
    hints+=("query=[\"=\",\"\$hypervisor_hostname\",\"$uuid\"]")

    # If targeting specific node, support forcing out of maintenance mode
    if [[ "$FORCE_ACTIVE" == "1" ]]; then
      if [[ "$(openstack baremetal node show "$uuid" -f json | jq .maintenance)" == "true" ]]; then
        echo "Forcing $uuid out of maintenance mode"
        openstack baremetal node maintenance unset "$uuid" <"$TTY"
        nicesleep 5
      fi
    fi
  fi

  echo "Provisioning $server_name as $IMAGE"
  openstack server create \
    --max-width 80 \
    --flavor baremetal \
    --image "$IMAGE" \
    --key-name "$KEY_PAIR" \
    --nic net-id="$sharednet_id" \
    $(for h in "${hints[@]}"; do echo "--hint $h "; done) \
    "$server_name"
done < "$INFILE"

